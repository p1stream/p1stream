#!/bin/bash
set -e -x

# To get consistent builds, files generated by the original build system are
# also committed. This script executes the build system and copies those files
# to `generated/`.

# Running this script is only necessary when updating the dependency in the
# repository, and it's rather much dependant on the environment.

# Updating the dependency involves updating the submodule, running this script,
# and carefully reviewing submodule changes for things that need to be
# reflected in the project build settings.


# Create scratch directory.
SCRATCH="`dirname $0`/../_scratch"
mkdir -p $SCRATCH
cd $SCRATCH

# Create a shared clone of the repo.
rm -fr node
git clone --shared ../node/node
cd node

# Add our entry point to the node binary.
patch -p1 <<EOF
diff --git a/node.gyp b/node.gyp
index f6586c4..d50ace7 100644
--- a/node.gyp
+++ b/node.gyp
@@ -373,6 +373,9 @@
               ],
             [ 'node_use_perfctr=="false"', {
               'inputs': [ 'src/perfctr_macros.py' ]
+            }],
+            [ 'OS=="mac"', {
+              'inputs': [ '../../P1stream/osx/_third_party_main.js' ]
             }]
           ],
               'action': [
EOF

# Fix build dependency problem in V8.
patch -p1 <<EOF
diff --git a/deps/v8/tools/gyp/v8.gyp b/deps/v8/tools/gyp/v8.gyp
index 71cf366..0927b18 100644
--- a/deps/v8/tools/gyp/v8.gyp
+++ b/deps/v8/tools/gyp/v8.gyp
@@ -747,6 +747,7 @@
               ],
             }],
             ['v8_postmortem_support=="true"', {
+              'dependencies': ['postmortem-metadata'],
               'sources': [
                 '<(SHARED_INTERMEDIATE_DIR)/debug-support.cc',
               ]
EOF

# Run configure and make on specific files.
./configure

# Copy generated files.
OUT="../../node/generated"
cp config.gypi "$OUT/"
